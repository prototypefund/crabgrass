:ruby
  mode = 'share' if mode.nil? # either 'share' or 'notify'
  form_name = mode + '_page_form'
  add_button_id = 'add_recipient_button'
  access_value = may_select_access_participation? ? "$('recipient_access').value" : "'#{Conf.default_page_access}'"

  # this is a little hacky: page_share_path is a nested resource of page, which makes sense. there
  # is one specific case when we don't need a page, however, and that is when we simply want to
  # add users in the page creation form. to ensure that the route for page_share_path generates, we ensure
  # that the page has an ID, even if it is a dummy one.

  page = @page || Page.new
  page.id = 0 if page.id.nil?

  # the remote action that is triggered when the 'add' button is pressed (or
  # the popup item is selected).
  with = "'recipient[name]=' + $('recipient_name').value + '&recipient[access]=' + #{access_value} + '&_method=put'"
  add_action = {url: page_share_path(page, mode: mode, add: true).html_safe, method: 'put', with: with}

  # this is called after an item in the popup has been selected.
  # it makes it so selecting an item is like hitting the add button
  # we clear the recipient_name field so that we don't get a double submit
  # So far we have not been able to extract into a js file because
  # the autocrypt lib extracts it as an option from the
  # autocomplete_entity_field_tag below.

  after_update_function = <<-EOJS
    function(value, data) {
      $('add_recipient_button').click();
      $('recipient_name').value='';
    }
  EOJS

%table.share_page_recipient_add.full_width
  %tr
    %td#autocomplete_container{style:'width:100%'}
      = autocomplete_entity_field_tag 'recipient_name',
        style: 'width:100%',
        onselect: after_update_function,
        container: 'autocomplete_container',
        placeholder: :enter_name_of_group_or_person
    %td= "&nbsp;".html_safe
    %td
      - if mode == 'share' and may_select_access_participation?
        = select_page_access 'recipient[access]', blank: false
      - else
        = hidden_field_tag 'recipient[access]'
    %td= "&nbsp;".html_safe
    %td= link_to icon_tag('plus'), page_share_path(page, mode: mode, add: true).html_safe,
            remote: true,
            method: :put,
            data: { with: with, loading: spinner_icon_on('plus', add_button_id), complete: spinner_icon_off('plus', add_button_id )},
            id: add_button_id

#share_page_recipient_area.autocomplete_results_area.p{style: "display:none"}
  = render 'page/shares/list_of_recipients'

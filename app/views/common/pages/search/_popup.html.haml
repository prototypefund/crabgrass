-#
-# This is used to generate the content for search filter popups
-#
-# requires variables:
-# * filter
-# * url
-#
-# search filters can set these html options to control how the popup is displayed:
-#
-# :submit_button -- if true, include an extra submit button in the popup.
-#                   otherwise we still include the button, but hidden
-#                   (because of how form_tag and :with work, we use this button for all submits).
-#
-#
-# notes:
-#
-# When calculating the path, params submitted in this form are used to substitute
-# into the path. For example,
-#
-#   if params['user_id']  --> 'green', then
-#   /created-by/:user_id/ --> /created-by/green/
-#

- with = "FilterPath.encode()+'&'+Form.serialize(this.form)"
- @filter_submit_options = {url: url, with: with, loading: show_spinner('search_filter'), complete: close_modal_function}

= form_tag(url, id: 'page_search_form') do
  - if filter.description.present?
    .tip.info_16
      = filter.description.t
  = self.instance_eval(&filter.html_block)
  .buttons-right
    - if filter.options[:submit_button]
      = spinner('search_filter')
      = close_modal_button
      = button_to_function :search.t, remote_function(@filter_submit_options), class: 'btn btn-primary', name: 'submit'
    - else
      = text_spinner('loading...', 'search_filter')
      = button_to_function '', remote_function(@filter_submit_options), style: 'display:none', name: 'submit'

